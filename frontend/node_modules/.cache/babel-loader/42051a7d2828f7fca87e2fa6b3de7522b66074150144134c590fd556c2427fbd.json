{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AGLoCo\\\\Desktop\\\\reservations_calendar\\\\frontend\\\\src\\\\components\\\\ReservationList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservationList = () => {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/reservations\").then(response => {\n      setReservations(response.data);\n    }).catch(error => {\n      console.error('Error fetching reservations:', error);\n    });\n  }, []);\n\n  // Function to format date to display only date part\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(); // Change the format as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"heading\",\n      children: \"Reservations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Check-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Check-out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Guest Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: reservations.map(reservation => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: reservation.checkInDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reservation.checkOutDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reservation.guestName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reservation.numberOfGuests\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: reservation.bookingChannel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, reservation._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(ReservationList, \"bJU0YD+rB1tqLAsQkfWtgYtNcY4=\");\n_c = ReservationList;\nexport default ReservationList;\nvar _c;\n$RefreshReg$(_c, \"ReservationList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ReservationList","_s","reservations","setReservations","get","then","response","data","catch","error","console","formatDate","dateString","date","Date","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","reservation","checkInDate","checkOutDate","guestName","numberOfGuests","bookingChannel","_id","_c","$RefreshReg$"],"sources":["C:/Users/AGLoCo/Desktop/reservations_calendar/frontend/src/components/ReservationList.js"],"sourcesContent":["import React , {useEffect , useState } from 'react';\r\nimport axios from 'axios'\r\nconst ReservationList = () => {\r\n    const [reservations , setReservations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5000/reservations\")\r\n        .then(response => {\r\n            setReservations(response.data)\r\n        })\r\n        .catch(error => {\r\n            console.error('Error fetching reservations:' , error);\r\n        })\r\n    }, []);\r\n\r\n      // Function to format date to display only date part\r\n      const formatDate = (dateString) => {\r\n        const date = new Date(dateString);\r\n        return date.toLocaleDateString(); // Change the format as needed\r\n    };\r\n     return (\r\n        <div className='container mt-4'>\r\n            <h2 className='heading'>Reservations</h2>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Check-in</th>\r\n                        <th>Check-out</th>\r\n                        <th>Name</th>\r\n                        <th>Guest Number</th>\r\n                        <th>Channel</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {reservations.map(reservation => (\r\n                        <tr key={reservation._id}>\r\n                            <td>{reservation.checkInDate}</td>\r\n                            <td>{reservation.checkOutDate}</td>\r\n                            <td>{reservation.guestName}</td>\r\n                            <td>{reservation.numberOfGuests}</td>\r\n                            <td>{reservation.bookingChannel}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n     );\r\n                };\r\n\r\n export default ReservationList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}